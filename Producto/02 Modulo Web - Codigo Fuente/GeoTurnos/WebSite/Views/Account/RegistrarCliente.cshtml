@model WebSite.Models.RegistrarClienteViewModel
<link rel="stylesheet" href="~/Content/Site.css" type="text/css" />

@using (Html.BeginForm("RegistrarCliente", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" ng-controller="registrarUsuario">

        <div class="row filaRegistrarCliente">

            <div id="titulosRegistrar">
                <h2>Registrar Nuevo Cliente</h2>
            </div>

            <div style="padding-top:20px;">

            </div>
        </div>
        <div class="row filaRegistrarCliente">
            <div class="col-md-6 col-sm-6">

                <h3>Datos del Cliente</h3>
                <hr class="lineaSeparadoraTitulo" />


                <div class="form-group">
                    @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.idTipoDocumento , htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <select class="form-control" name="idTipoDocumento" id="tipoDoc">
                            <option disabled selected>Seleccione...</option>
                            <option value="{{tipo.idTipoDocumento}}" ng-repeat="tipo in tipoDoc">{{tipo.nombre}}</option>

                        </select>
                        @Html.ValidationMessageFor(model => model.idTipoDocumento, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.nroDocumento, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.nroDocumento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nroDocumento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fechaNacimiento, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div id="fechaNacimiento" name="fechaNacimiento"></div>
                        @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-4" for="provincias">Provincia</label>
                    <div class="col-md-8">
                        <select class="form-control" id="paices">
                            <option disabled selected>Seleccione...</option>
                            <option value="{{provincia.idProvincia}}" ng-repeat="provincia in provincias" ng-click="clickProvincias(provincia.idProvincia)">{{provincia.nombre}}</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-4" for="ciudades">Ciudad</label>
                    <div class="col-md-8">
                        <select class="form-control" id="ciudades" disabled>
                            <option disabled selected>Seleccione...</option>
                            <option value="{{ciudad.idCiudad}}" ng-repeat="ciudad in ciudades" ng-click="clickCiudades(ciudad.idCiudad)">{{ciudad.nombre}}</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.idBarrio, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <select class="form-control" name="idBarrio" id="barrios" disabled>
                            <option disabled selected>Seleccione...</option>
                            <option value="{{barrio.idBarrio}}" ng-repeat="barrio in barrios">{{barrio.nombre}}</option>
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.calle, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.calle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.calle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.altura, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.altura, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.altura, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.piso, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.piso, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.piso, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.departamento, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.departamento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.departamento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.torre, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.torre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.torre, "", new { @class = "text-danger" })
                    </div>
                </div>


            </div>

            <div class="col-md-6  col-sm-6">

                <h3>Datos de Usaurio</h3>
                <hr class="lineaSeparadoraTitulo" />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.fotourl, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <img id="fotoAvatar" src="~/resources/avatar-male-empty.png" class="img-responsive img-thumbnail" style="height:140px;width:140px" />
                        <input type="file" accept=".png,.jpg" name="fotourl" onchange="onFileSelected(event)" id="archivoImagen" />
                        @Html.ValidationMessageFor(model => model.fotourl, "", new { @class = "text-danger" })
                    </div>
                    <input type="hidden" name="foto" id="foto" />
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.usuario1, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.usuario1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.usuario1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.contraseña, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.contraseña, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.contraseña, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.confirmarcontraseña, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.confirmarcontraseña, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.confirmarcontraseña, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.preguntaSeguridad1, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.preguntaSeguridad1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.preguntaSeguridad1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.respuestaSeguridad1, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.respuestaSeguridad1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.respuestaSeguridad1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.preguntaSeguridad2, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.preguntaSeguridad2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.preguntaSeguridad2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.respuestaSeguridad2, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.respuestaSeguridad2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.respuestaSeguridad2, "", new { @class = "text-danger" })
                    </div>
                </div>



            </div>
        </div>
        <div class="row filaRegistrarCliente">
            <hr />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Registrar" class="btn btn-primary" />
                </div>
            </div>
        </div>


    </div>
}
<script>
    function onFileSelected(event) {

        var selectedFile = event.target.files[0];
        var reader = new FileReader();

        var imgtag = document.getElementById("fotoAvatar");
        var imgbyte = document.getElementById("foto");

        imgtag.title = selectedFile.name;

        reader.onload = function (event) {
            imgtag.src = event.target.result;
            imgbyte.value = event.target.result.replace(/^data:image\/(png|jpg);base64,/, "");

        };

        reader.readAsDataURL(selectedFile);

    };


</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
